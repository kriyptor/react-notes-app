{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","size","onClick","AddNote","handleAddNote","handleClose","useState","noteText","setNoteText","cols","rows","placeholder","value","onChange","e","target","length","trim","alert","NotesList","notes","modal","setmodal","map","note","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","Search","handleSearchNote","type","Header","handleToogleDarkMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkmode","setDarkMode","useEffect","fetchNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLocaleLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c485c8d.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md'\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n    return ( \n        <div className=\"note post\">\n            <span>{text}</span>\n            <div className=\"note-footer\">\n                <small>{date}</small>\n                <MdDeleteForever className='delete-icon' size='1.3em' onClick={() => handleDeleteNote(id)}/>\n            </div>\n        </div>\n     );\n}\n \nexport default Note;","import { useState } from \"react\";\n\n\nconst AddNote = ({ handleAddNote , handleClose }) => {\n    const [noteText, setNoteText] = useState('');\n    const charLimit = 200;\n\n    const handleChange = (e) => {\n        if(charLimit - e.target.value.length >=0 ){\n            setNoteText(e.target.value);\n        }\n    }\n\n    const handleSaveClick = () => {\n        if(noteText.trim().length > 0){\n            handleAddNote(noteText)\n            setNoteText('')\n            handleClose()\n        }\n        else{\n            alert('kindly add some text!!!')\n        }\n    }\n\n    return ( \n        <div className=\"note new\">\n            <textarea \n            cols=\"10\" \n            rows=\"8\"\n            placeholder='Type to add a note...'\n            value={noteText}\n            onChange={handleChange}>     \n            </textarea>\n            <div className=\"note-footer\">\n                <small>{charLimit-noteText.length} remaining</small>\n                <button className='save' onClick={handleSaveClick}>Save</button>\n            </div>\n         </div>\n     );\n}\n \nexport default AddNote;","import { useState } from \"react\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nimport Modal from 'react-modal';\n\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n    const [modal, setmodal] = useState(false);\n\n    const close = () => {\n        setmodal(false);\n    }\n\n    const customStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: '60%',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      };\n\n    return ( \n        <div className=\"notes-list\">\n            {notes.map((note) => (\n            <Note id={note.id} text={note.text} date={note.date} handleDeleteNote={handleDeleteNote}/>\n            ))}\n            <Modal isOpen={modal} onRequestClose={() => setmodal(false)} style={customStyles}>\n            <AddNote \n            handleAddNote={handleAddNote}\n            handleClose={close}\n            />\n            </Modal>\n        <button className='plus'onClick={()=> setmodal(true)}>+</button>\n        </div>\n     );\n}\n \nexport default NotesList;","import React from 'react';\nimport { MdSearch } from 'react-icons/md'\n\nconst Search = ({ handleSearchNote }) => {\n    return ( \n        <div className='search'>\n            <MdSearch className='search-icon' size='1.3em'/>\n            <input \n            onChange={(e) => handleSearchNote(e.target.value)}\n            type=\"text\" \n            placeholder='Type To search' />\n        </div>\n     );\n}\n \nexport default Search;","import React from \"react\";\n\nconst Header = ({ handleToogleDarkMode }) => {\n    return ( \n        <div className=\"header\">\n            <h1>Your Notes</h1>\n            <button className=\"save\" onClick={() => handleToogleDarkMode((previousDarkMode) => !previousDarkMode)}>Toggle Mode</button>\n        </div>\n     );\n}\n \nexport default Header;"," import { useState, useEffect } from \"react\";\n import { nanoid } from 'nanoid';\n import NotesList from \"./components/NotesList\";\n import Search from \"./components/Search\";\n import Header from \"./components/Header\";\n \n const App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: 'This is a demo note',\n      date: '15/04/2021'\n    },\n  ]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n    console.log(notes)\n  }\n\n  const deleteNote = (id) =>{\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n\n  const [searchText, setSearchText] = useState('');\n  const [darkmode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const fetchNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n    if(fetchNotes){\n      setNotes(fetchNotes);\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\n      'react-notes-app-data', \n      JSON.stringify(notes))\n  }, [notes])\n\n\n   return ( \n    <div className={`${darkmode && 'dark-mode'}`}>\n       <div className=\"container\">\n       <Header handleToogleDarkMode={setDarkMode}/>\n       <Search handleSearchNote={setSearchText}/>\n       <NotesList \n       notes={notes.filter((note) => note.text.toLocaleLowerCase().includes(searchText))} \n       handleAddNote={addNote}\n       handleDeleteNote={deleteNote}/>\n     </div>\n    </div>\n    );\n }\n  \n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}